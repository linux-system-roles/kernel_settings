---
- name: Set version specific variables
  include_vars: "{{ lookup('first_found', ffparams) }}"
  vars:
    ffparams:
      files:
        - "{{ ansible_facts['distribution'] }}_\
          {{ ansible_facts['distribution_version'] }}.yml"
        - "{{ ansible_facts['distribution'] }}_\
          {{ ansible_facts['distribution_major_version'] }}.yml"
        - "{{ ansible_facts['distribution'] }}.yml"
        - "{{ ansible_facts['os_family'] }}.yml"
        - "default.yml"
      paths:
        - "{{ role_path }}/vars"

- name: Ensure required packages are installed
  package:
    name: "{{ __kernel_settings_packages }}"
    state: present

- name: Ensure required services are enabled and started
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop: "{{ __kernel_settings_services }}"

- name: Ensure kernel settings profile directory exists
  file:
    path: "{{ __kernel_settings_profile_dir }}"
    state: directory
    mode: 0755

- name: Generate a configuration for kernel settings
  template:
    src: "{{ __kernel_settings_profile_src }}.j2"
    dest: "{{ __kernel_settings_profile_filename }}"
    force: no
    mode: 0644

- name: Apply kernel settings
  kernel_settings:
    cpu:
      - name: "{{ 'governor' if kernel_settings_cpu_governor
                  else none }}"
        value: "{{ kernel_settings_cpu_governor
                   if kernel_settings_cpu_governor !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_cpu_governor ==
                    __kernel_settings_state_absent else none }}"
      - name: "{{ 'min_perf_pct' if kernel_settings_cpu_min_perf_pct
                  else none }}"
        value: "{{ kernel_settings_cpu_min_perf_pct
                   if kernel_settings_cpu_min_perf_pct !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_cpu_min_perf_pct ==
                    __kernel_settings_state_absent else none }}"
      - name: "{{ 'max_perf_pct' if kernel_settings_cpu_max_perf_pct
                  else none }}"
        value: "{{ kernel_settings_cpu_max_perf_pct
                   if kernel_settings_cpu_max_perf_pct !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_cpu_max_perf_pct ==
                    __kernel_settings_state_absent else none }}"
      - name: "{{ 'sampling_down_factor' if kernel_settings_sampling_down_factor
                  else none }}"
        value: "{{ kernel_settings_sampling_down_factor
                   if kernel_settings_sampling_down_factor !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_sampling_down_factor ==
                    __kernel_settings_state_absent else none }}"
      - name: "{{ 'no_turbo' if kernel_settings_no_turbo
                  else none }}"
        value: "{{ kernel_settings_no_turbo
                   if kernel_settings_no_turbo !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_no_turbo ==
                    __kernel_settings_state_absent else none }}"
    disk:
      - name: "{{ 'elevator' if kernel_settings_disk_elevator
                  else none }}"
        value: "{{ kernel_settings_disk_elevator
                   if kernel_settings_disk_elevator !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_disk_elevator ==
                    __kernel_settings_state_absent else none }}"
      - name: "{{ 'readahead' if kernel_settings_disk_read_ahead_kb
                  else none }}"
        value: "{{ kernel_settings_disk_read_ahead_kb
                   if kernel_settings_disk_read_ahead_kb !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_disk_read_ahead_kb ==
                    __kernel_settings_state_absent else none }}"
      - name: "{{ 'scheduler_quantum' if kernel_settings_disk_scheduler_quantum
                  else none }}"
        value: "{{ kernel_settings_disk_scheduler_quantum
                   if kernel_settings_disk_scheduler_quantum !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_disk_scheduler_quantum ==
                    __kernel_settings_state_absent else none }}"
    net:
      - name: "{{ 'nf_conntrack_hashsize' if kernel_settings_nf_conntrack_hashsize
                  else none }}"
        value: "{{ kernel_settings_nf_conntrack_hashsize
                   if kernel_settings_nf_conntrack_hashsize !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_nf_conntrack_hashsize ==
                    __kernel_settings_state_absent else none }}"
    audio:
      - name: "{{ 'timeout' if kernel_settings_audio_timeout
                  else none }}"
        value: "{{ kernel_settings_audio_timeout
                   if kernel_settings_audio_timeout !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_audio_timeout ==
                    __kernel_settings_state_absent else none }}"
      - name: "{{ 'reset_controller' if kernel_settings_audio_reset_controller
                  else none }}"
        value: "{{ kernel_settings_audio_reset_controller
                   if kernel_settings_audio_reset_controller !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_audio_reset_controller ==
                    __kernel_settings_state_absent else none }}"
    scsi_host:
      - name: "{{ 'alpm' if kernel_settings_scsi_host_alpm
                  else none }}"
        value: "{{ kernel_settings_scsi_host_alpm
                   if kernel_settings_scsi_host_alpm !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_scsi_host_alpm ==
                    __kernel_settings_state_absent else none }}"
    eeepc_she:
      - name: "{{ 'she_powersave' if kernel_settings_eeepc_she_powersave
                  else none }}"
        value: "{{ kernel_settings_eeepc_she_powersave
                   if kernel_settings_eeepc_she_powersave !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_eeepc_she_powersave ==
                    __kernel_settings_state_absent else none }}"
      - name: "{{ 'she_normal' if kernel_settings_eeepc_she_normal
                  else none }}"
        value: "{{ kernel_settings_eeepc_she_normal
                   if kernel_settings_eeepc_she_normal !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_eeepc_she_normal ==
                    __kernel_settings_state_absent else none }}"
    video:
      - name: "{{ 'radeon_powersave' if kernel_settings_video_radeon_powersave
                  else none }}"
        value: "{{ kernel_settings_video_radeon_powersave
                   if kernel_settings_video_radeon_powersave !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_video_radeon_powersave ==
                    __kernel_settings_state_absent else none }}"
    usb:
      - name: "{{ 'autosuspend' if kernel_settings_usb_autosuspend
                  else none }}"
        value: "{{ kernel_settings_usb_autosuspend
                   if kernel_settings_usb_autosuspend !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_usb_autosuspend ==
                    __kernel_settings_state_absent else none }}"
    sysctl: "{{ kernel_settings_sysctl if kernel_settings_sysctl else omit }}"
    sysfs: "{{ kernel_settings_sysfs if kernel_settings_sysfs else omit }}"
    systemd:
      - name: "{{ 'cpu_affinity' if kernel_settings_systemd_cpu_affinity
                  else none }}"
        value: "{{ kernel_settings_systemd_cpu_affinity
                   if kernel_settings_systemd_cpu_affinity !=
                   __kernel_settings_state_absent
                   else none }}"
        state: "{{ 'absent' if kernel_settings_systemd_cpu_affinity ==
                   __kernel_settings_state_absent else none }}"
    vm:
      - name: "{{ 'transparent_hugepages'
                  if kernel_settings_transparent_hugepages
                  else none }}"
        value: "{{ kernel_settings_transparent_hugepages
                   if kernel_settings_transparent_hugepages !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_transparent_hugepages ==
                   __kernel_settings_state_absent else none }}"
      - name: "{{ 'transparent_hugepage.defrag'
                  if kernel_settings_transparent_hugepages_defrag
                  else none }}"
        value: "{{ kernel_settings_transparent_hugepages_defrag
                   if kernel_settings_transparent_hugepages_defrag !=
                   __kernel_settings_state_absent else none }}"
        state: "{{ 'absent' if kernel_settings_transparent_hugepages_defrag ==
                   __kernel_settings_state_absent else none }}"
    bootloader:
      - name: "{{ 'cmdline'
                  if kernel_settings_bootloader_cmdline | d({})
                  else none }}"
        value: "{{ kernel_settings_bootloader_cmdline |
                   d([]) }}"
    purge: "{{ kernel_settings_purge }}"
  notify: __kernel_settings_handler_modified
  register: __kernel_settings_register_module
  when:
    - kernel_settings_sysctl or kernel_settings_sysfs
      or kernel_settings_systemd_cpu_affinity
      or kernel_settings_transparent_hugepages
      or kernel_settings_transparent_hugepages_defrag
      or kernel_settings_bootloader_cmdline | d({})
      or kernel_settings_purge

- name: tuned apply settings
  command: >
    tuned-adm profile '{{ __kernel_settings_register_module.active_profile }}'
  when: __kernel_settings_register_module is changed

- name: verify settings
  include_tasks: verify_settings.yml
  when: __kernel_settings_register_module is changed

- name: notify user that reboot is needed to apply changes
  debug:
    msg: >
      kernel_settings have been modified.
      A reboot is required in order to apply the changes.
  when:
    - __kernel_settings_register_module.reboot_required | d(false)
    - not kernel_settings_reboot_ok | d(false)

- name: set the flag that reboot is needed to apply changes
  set_fact:
    kernel_settings_reboot_required: true
  when:
    - __kernel_settings_register_module.reboot_required | d(false)
    - not kernel_settings_reboot_ok | d(false)
